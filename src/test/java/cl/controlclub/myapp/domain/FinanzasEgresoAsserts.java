package cl.controlclub.myapp.domain;

import static cl.controlclub.myapp.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class FinanzasEgresoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFinanzasEgresoAllPropertiesEquals(FinanzasEgreso expected, FinanzasEgreso actual) {
        assertFinanzasEgresoAutoGeneratedPropertiesEquals(expected, actual);
        assertFinanzasEgresoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFinanzasEgresoAllUpdatablePropertiesEquals(FinanzasEgreso expected, FinanzasEgreso actual) {
        assertFinanzasEgresoUpdatableFieldsEquals(expected, actual);
        assertFinanzasEgresoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFinanzasEgresoAutoGeneratedPropertiesEquals(FinanzasEgreso expected, FinanzasEgreso actual) {
        assertThat(expected)
            .as("Verify FinanzasEgreso auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFinanzasEgresoUpdatableFieldsEquals(FinanzasEgreso expected, FinanzasEgreso actual) {
        assertThat(expected)
            .as("Verify FinanzasEgreso relevant properties")
            .satisfies(e -> assertThat(e.getTipo()).as("check tipo").isEqualTo(actual.getTipo()))
            .satisfies(e -> assertThat(e.getDescripcion()).as("check descripcion").isEqualTo(actual.getDescripcion()))
            .satisfies(e -> assertThat(e.getMonto()).as("check monto").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getMonto()))
            .satisfies(e -> assertThat(e.getFecha()).as("check fecha").isEqualTo(actual.getFecha()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFinanzasEgresoUpdatableRelationshipsEquals(FinanzasEgreso expected, FinanzasEgreso actual) {
        assertThat(expected)
            .as("Verify FinanzasEgreso relationships")
            .satisfies(e -> assertThat(e.getCuentas()).as("check cuentas").isEqualTo(actual.getCuentas()));
    }
}
