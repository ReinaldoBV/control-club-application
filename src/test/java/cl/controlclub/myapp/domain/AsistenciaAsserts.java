package cl.controlclub.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AsistenciaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAsistenciaAllPropertiesEquals(Asistencia expected, Asistencia actual) {
        assertAsistenciaAutoGeneratedPropertiesEquals(expected, actual);
        assertAsistenciaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAsistenciaAllUpdatablePropertiesEquals(Asistencia expected, Asistencia actual) {
        assertAsistenciaUpdatableFieldsEquals(expected, actual);
        assertAsistenciaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAsistenciaAutoGeneratedPropertiesEquals(Asistencia expected, Asistencia actual) {
        assertThat(expected)
            .as("Verify Asistencia auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAsistenciaUpdatableFieldsEquals(Asistencia expected, Asistencia actual) {
        assertThat(expected)
            .as("Verify Asistencia relevant properties")
            .satisfies(e -> assertThat(e.getTipo()).as("check tipo").isEqualTo(actual.getTipo()))
            .satisfies(e -> assertThat(e.getIdEvento()).as("check idEvento").isEqualTo(actual.getIdEvento()))
            .satisfies(e -> assertThat(e.getFecha()).as("check fecha").isEqualTo(actual.getFecha()))
            .satisfies(e -> assertThat(e.getAsistencia()).as("check asistencia").isEqualTo(actual.getAsistencia()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAsistenciaUpdatableRelationshipsEquals(Asistencia expected, Asistencia actual) {}
}
