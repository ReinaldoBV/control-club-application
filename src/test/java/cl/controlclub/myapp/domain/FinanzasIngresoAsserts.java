package cl.controlclub.myapp.domain;

import static cl.controlclub.myapp.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class FinanzasIngresoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFinanzasIngresoAllPropertiesEquals(FinanzasIngreso expected, FinanzasIngreso actual) {
        assertFinanzasIngresoAutoGeneratedPropertiesEquals(expected, actual);
        assertFinanzasIngresoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFinanzasIngresoAllUpdatablePropertiesEquals(FinanzasIngreso expected, FinanzasIngreso actual) {
        assertFinanzasIngresoUpdatableFieldsEquals(expected, actual);
        assertFinanzasIngresoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFinanzasIngresoAutoGeneratedPropertiesEquals(FinanzasIngreso expected, FinanzasIngreso actual) {
        assertThat(expected)
            .as("Verify FinanzasIngreso auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFinanzasIngresoUpdatableFieldsEquals(FinanzasIngreso expected, FinanzasIngreso actual) {
        assertThat(expected)
            .as("Verify FinanzasIngreso relevant properties")
            .satisfies(e -> assertThat(e.getTipo()).as("check tipo").isEqualTo(actual.getTipo()))
            .satisfies(e -> assertThat(e.getDescripcion()).as("check descripcion").isEqualTo(actual.getDescripcion()))
            .satisfies(e -> assertThat(e.getMonto()).as("check monto").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getMonto()))
            .satisfies(e -> assertThat(e.getFecha()).as("check fecha").isEqualTo(actual.getFecha()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFinanzasIngresoUpdatableRelationshipsEquals(FinanzasIngreso expected, FinanzasIngreso actual) {}
}
