package cl.controlclub.myapp.domain;

import static cl.controlclub.myapp.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class EstadisticasBaloncestoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstadisticasBaloncestoAllPropertiesEquals(EstadisticasBaloncesto expected, EstadisticasBaloncesto actual) {
        assertEstadisticasBaloncestoAutoGeneratedPropertiesEquals(expected, actual);
        assertEstadisticasBaloncestoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstadisticasBaloncestoAllUpdatablePropertiesEquals(
        EstadisticasBaloncesto expected,
        EstadisticasBaloncesto actual
    ) {
        assertEstadisticasBaloncestoUpdatableFieldsEquals(expected, actual);
        assertEstadisticasBaloncestoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstadisticasBaloncestoAutoGeneratedPropertiesEquals(
        EstadisticasBaloncesto expected,
        EstadisticasBaloncesto actual
    ) {
        assertThat(expected)
            .as("Verify EstadisticasBaloncesto auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstadisticasBaloncestoUpdatableFieldsEquals(EstadisticasBaloncesto expected, EstadisticasBaloncesto actual) {
        assertThat(expected)
            .as("Verify EstadisticasBaloncesto relevant properties")
            .satisfies(e -> assertThat(e.getPuntos()).as("check puntos").isEqualTo(actual.getPuntos()))
            .satisfies(e -> assertThat(e.getRebotes()).as("check rebotes").isEqualTo(actual.getRebotes()))
            .satisfies(e -> assertThat(e.getAsistencias()).as("check asistencias").isEqualTo(actual.getAsistencias()))
            .satisfies(e -> assertThat(e.getRobos()).as("check robos").isEqualTo(actual.getRobos()))
            .satisfies(e -> assertThat(e.getBloqueos()).as("check bloqueos").isEqualTo(actual.getBloqueos()))
            .satisfies(
                e ->
                    assertThat(e.getPorcentajeTiro())
                        .as("check porcentajeTiro")
                        .usingComparator(bigDecimalCompareTo)
                        .isEqualTo(actual.getPorcentajeTiro())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEstadisticasBaloncestoUpdatableRelationshipsEquals(
        EstadisticasBaloncesto expected,
        EstadisticasBaloncesto actual
    ) {}
}
