package cl.controlclub.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CategoriasAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoriasAllPropertiesEquals(Categorias expected, Categorias actual) {
        assertCategoriasAutoGeneratedPropertiesEquals(expected, actual);
        assertCategoriasAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoriasAllUpdatablePropertiesEquals(Categorias expected, Categorias actual) {
        assertCategoriasUpdatableFieldsEquals(expected, actual);
        assertCategoriasUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoriasAutoGeneratedPropertiesEquals(Categorias expected, Categorias actual) {
        assertThat(expected)
            .as("Verify Categorias auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoriasUpdatableFieldsEquals(Categorias expected, Categorias actual) {
        assertThat(expected)
            .as("Verify Categorias relevant properties")
            .satisfies(e -> assertThat(e.getAnioInicio()).as("check anioInicio").isEqualTo(actual.getAnioInicio()))
            .satisfies(e -> assertThat(e.getAnioFinal()).as("check anioFinal").isEqualTo(actual.getAnioFinal()))
            .satisfies(e -> assertThat(e.getNombreCategoria()).as("check nombreCategoria").isEqualTo(actual.getNombreCategoria()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoriasUpdatableRelationshipsEquals(Categorias expected, Categorias actual) {
        assertThat(expected)
            .as("Verify Categorias relationships")
            .satisfies(e -> assertThat(e.getJugador()).as("check jugador").isEqualTo(actual.getJugador()));
    }
}
